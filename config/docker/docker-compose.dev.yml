services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: axisor-postgres
    environment:
      POSTGRES_DB: axisor
      POSTGRES_USER: axisor
      POSTGRES_PASSWORD: axisor_dev_password
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - axisor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U axisor -d axisor"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:7
    container_name: axisor-redis
    ports:
      - "16379:6379"
    volumes:
      - redis_data:/data
    networks:
      - axisor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile.dev
    container_name: axisor-backend
    env_file:
      - ../env/.env.development
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://axisor:axisor_dev_password@postgres:5432/axisor?schema=public
      REDIS_URL: redis://redis:6379
      PORT: 3010
      # LN Markets API - CORRIGIDO
      LN_MARKETS_API_BASE_URL: "https://api.lnmarkets.com/v2"
      LN_MARKETS_API_BASE_URL_TESTNET: "https://api.testnet4.lnmarkets.com/v2"
      LN_MARKETS_API_BASE_URL_CURRENT: "https://api.lnmarkets.com/v2"
    ports:
      - "13010:3010"
    volumes:
      - ../../backend:/app
      - ../../.system:/app/.system
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - axisor-network
    command: npm run dev
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://127.0.0.1:3010/api/health-check', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile.dev
    container_name: axisor-frontend
    ports:
      - "13000:3001"
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - axisor-network
    command: npm run dev
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://127.0.0.1:3001', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Workers (opcionais para desenvolvimento)
  margin-monitor:
    build:
      context: ../../backend
      dockerfile: Dockerfile.dev
    container_name: axisor-margin-monitor
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://axisor:axisor_dev_password@postgres:5432/axisor?schema=public
      REDIS_URL: redis://redis:6379
    volumes:
      - ../../backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - axisor-network
    command: npm run worker:margin-monitor
    profiles:
      - workers

  automation-executor:
    build:
      context: ../../backend
      dockerfile: Dockerfile.dev
    container_name: axisor-automation-executor
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://axisor:axisor_dev_password@postgres:5432/axisor?schema=public
      REDIS_URL: redis://redis:6379
    volumes:
      - ../../backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - axisor-network
    command: npm run worker:automation-executor
    profiles:
      - workers

  notification-worker:
    build:
      context: ../../backend
      dockerfile: Dockerfile.dev
    container_name: axisor-notification-worker
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://axisor:axisor_dev_password@postgres:5432/axisor?schema=public
      REDIS_URL: redis://redis:6379
    volumes:
      - ../../backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - axisor-network
    command: npm run worker:notification
    profiles:
      - workers

  payment-validator:
    build:
      context: ../../backend
      dockerfile: Dockerfile.dev
    container_name: axisor-payment-validator
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://axisor:axisor_dev_password@postgres:5432/axisor?schema=public
      REDIS_URL: redis://redis:6379
    volumes:
      - ../../backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - axisor-network
    command: npm run worker:payment-validator
    profiles:
      - workers

volumes:
  postgres_data:
  redis_data:

networks:
  axisor-network:
    driver: bridge
