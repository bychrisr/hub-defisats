import React from 'react';
import { Navigate } from 'react-router-dom';
import { useAuthStore } from '@/stores/auth';

interface AuthGuardProps {
  children: React.ReactNode;
  fallbackRoute?: string;
}

/**
 * AuthGuard - Componente de prote√ß√£o de autentica√ß√£o robusto
 * 
 * Garante que apenas usu√°rios autenticados acessem rotas protegidas.
 * Implementa m√∫ltiplas camadas de verifica√ß√£o para evitar problemas de redirecionamento.
 */
export const AuthGuard: React.FC<AuthGuardProps> = ({ 
  children, 
  fallbackRoute = '/login' 
}) => {
  const { isAuthenticated, isLoading, isInitialized } = useAuthStore();

  console.log('üîê AUTH GUARD - State check:', {
    isAuthenticated,
    isLoading,
    isInitialized,
    fallbackRoute
  });

  // 1. Verifica√ß√£o de inicializa√ß√£o
  if (!isInitialized) {
    console.log('‚è≥ AUTH GUARD - Not initialized, showing loading...');
    return (
      <div className="flex items-center justify-center min-h-screen bg-background">
        <div className="flex flex-col items-center space-y-4">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
          <p className="text-sm text-muted-foreground">Verificando autentica√ß√£o...</p>
        </div>
      </div>
    );
  }

  // 2. Verifica√ß√£o de carregamento
  if (isLoading) {
    console.log('‚è≥ AUTH GUARD - Loading, showing loading...');
    return (
      <div className="flex items-center justify-center min-h-screen bg-background">
        <div className="flex flex-col items-center space-y-4">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
          <p className="text-sm text-muted-foreground">Carregando...</p>
        </div>
      </div>
    );
  }

  // 3. Verifica√ß√£o de autentica√ß√£o
  if (!isAuthenticated) {
    console.log('‚ùå AUTH GUARD - Not authenticated, redirecting to:', fallbackRoute);
    return <Navigate to={fallbackRoute} replace />;
  }

  // 4. Usu√°rio autenticado - renderizar conte√∫do
  console.log('‚úÖ AUTH GUARD - User authenticated, rendering content');
  return <>{children}</>;
};

/**
 * Hook para verifica√ß√£o r√°pida de autentica√ß√£o
 */
export const useAuthGuard = () => {
  const { isAuthenticated, isLoading, isInitialized } = useAuthStore();

  return {
    isAuthenticated,
    isLoading,
    isInitialized,
    needsRedirect: isInitialized && !isLoading && !isAuthenticated,
    isReady: isInitialized && !isLoading
  };
};
