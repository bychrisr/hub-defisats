services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hubdefisats-postgres-dev
    environment:
      POSTGRES_DB: hubdefisats
      POSTGRES_USER: hubdefisats
      POSTGRES_PASSWORD: hubdefisats_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hubdefisats-network

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: hubdefisats-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hubdefisats-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: hubdefisats-backend-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://hubdefisats:hubdefisats_dev_password@postgres:5432/hubdefisats?schema=public
      REDIS_URL: redis://redis:6379
      PORT: 3010
    ports:
      - "3010:3010"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - hubdefisats-network
    command: npm run dev:simple

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: hubdefisats-frontend-dev
    environment:
      VITE_API_URL: http://localhost:3010
    ports:
      - "3001:3001"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - hubdefisats-network
    command: npm run dev

  # Workers
  margin-monitor:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: hubdefisats-margin-monitor-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://hubdefisats:hubdefisats_dev_password@postgres:5432/hubdefisats?schema=public
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - hubdefisats-network
    command: npm run worker:margin-monitor

  automation-executor:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: hubdefisats-automation-executor-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://hubdefisats:hubdefisats_dev_password@postgres:5432/hubdefisats?schema=public
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - hubdefisats-network
    command: npm run worker:automation-executor

  notification-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: hubdefisats-notification-worker-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://hubdefisats:hubdefisats_dev_password@postgres:5432/hubdefisats?schema=public
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - hubdefisats-network
    command: npm run worker:notification

  payment-validator:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: hubdefisats-payment-validator-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://hubdefisats:hubdefisats_dev_password@postgres:5432/hubdefisats?schema=public
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - hubdefisats-network
    command: npm run worker:payment-validator

volumes:
  postgres_data:
  redis_data:

networks:
  hubdefisats-network:
    driver: bridge
