version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hub-defisats-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hubdefisats
      POSTGRES_USER: hubdefisats
      POSTGRES_PASSWORD: hubdefisats_dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hubdefisats"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hub-defisats-network

  # Redis Cache
  redis:
    image: redis:6-alpine
    container_name: hub-defisats-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "16379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hub-defisats-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: hub-defisats-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://hubdefisats:hubdefisats_dev_password@postgres:5432/hubdefisats
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev_jwt_secret_key_12345
      ENCRYPTION_KEY: dev_encryption_key_12345678901234567890123456789012
      LN_MARKETS_BASE_URL: https://api.lnmarkets.com/v2
      PORT: 3010
    ports:
      - "13010:3010"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3010/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - hub-defisats-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: hub-defisats-frontend
    restart: unless-stopped
    ports:
      - "13000:3001"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - hub-defisats-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hub-defisats-network:
    driver: bridge
