#!/bin/bash

# üå± Database Seeding Script
# Script para popular banco de dados com dados padr√£o

set -e

echo "üå± Hub DeFiSATS - Database Seeding"
echo "=================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log colorido
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Verificar se estamos no diret√≥rio correto
if [ ! -f "docker-compose.dev.yml" ]; then
    log_error "Execute este script a partir da raiz do projeto"
    exit 1
fi

# Verificar se containers est√£o rodando
log_info "Verificando containers..."
if ! docker ps | grep -q "axisor-postgres"; then
    log_error "Container PostgreSQL n√£o est√° rodando"
    log_info "Execute: docker-compose -f docker-compose.dev.yml up -d"
    exit 1
fi

if ! docker ps | grep -q "axisor-backend"; then
    log_error "Container Backend n√£o est√° rodando"
    log_info "Execute: docker-compose -f docker-compose.dev.yml up -d"
    exit 1
fi

log_success "Containers est√£o rodando"

# Fun√ß√£o para executar seeder
run_seeder() {
    local seeder_name=$1
    local description=$2
    
    log_info "Executando seeder: $seeder_name"
    log_info "Descri√ß√£o: $description"
    
    # Executar seeder dentro do container backend
    if docker exec axisor-backend npm run "seed:$seeder_name"; then
        log_success "Seeder $seeder_name executado com sucesso"
    else
        log_error "Falha ao executar seeder $seeder_name"
        return 1
    fi
}

# Menu interativo
show_menu() {
    echo ""
    echo "üìã Op√ß√µes dispon√≠veis:"
    echo "1) Executar todos os seeders"
    echo "2) Executar apenas Rate Limiting"
    echo "3) Executar apenas Admin Users"
    echo "4) Executar apenas Plans"
    echo "5) Listar seeders dispon√≠veis"
    echo "6) Sair"
    echo ""
}

# Fun√ß√£o principal
main() {
    while true; do
        show_menu
        read -p "Escolha uma op√ß√£o (1-6): " choice
        
        case $choice in
            1)
                log_info "Executando todos os seeders..."
                run_seeder "all" "Todos os seeders"
                ;;
            2)
                run_seeder "rate-limit" "Configura√ß√µes de Rate Limiting"
                ;;
            3)
                run_seeder "admin" "Usu√°rios Administrativos"
                ;;
            4)
                run_seeder "plans" "Planos de Assinatura"
                ;;
            5)
                log_info "Listando seeders dispon√≠veis..."
                docker exec axisor-backend npm run seed:list
                ;;
            6)
                log_success "Saindo..."
                exit 0
                ;;
            *)
                log_error "Op√ß√£o inv√°lida. Escolha entre 1-6."
                ;;
        esac
        
        echo ""
        read -p "Pressione Enter para continuar..."
    done
}

# Verificar argumentos da linha de comando
if [ $# -eq 0 ]; then
    # Modo interativo
    main
else
    # Modo direto
    case $1 in
        "all")
            run_seeder "all" "Todos os seeders"
            ;;
        "rate-limit")
            run_seeder "rate-limit" "Configura√ß√µes de Rate Limiting"
            ;;
        "admin")
            run_seeder "admin" "Usu√°rios Administrativos"
            ;;
        "plans")
            run_seeder "plans" "Planos de Assinatura"
            ;;
        "list")
            docker exec axisor-backend npm run seed:list
            ;;
        *)
            echo "Uso: $0 [all|rate-limit|admin|plans|list]"
            echo ""
            echo "Exemplos:"
            echo "  $0                    # Modo interativo"
            echo "  $0 all                # Executar todos"
            echo "  $0 rate-limit         # Apenas rate limiting"
            echo "  $0 admin              # Apenas admin users"
            echo "  $0 plans              # Apenas plans"
            echo "  $0 list               # Listar dispon√≠veis"
            exit 1
            ;;
    esac
fi

log_success "Script conclu√≠do!"